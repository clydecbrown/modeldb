// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/public/modeldb/versioning/VersioningService.proto

package versioning

import (
	context "context"
	fmt "fmt"
	modeldb "github.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Data structure used to compute the SHA of a commit
type InternalCommit struct {
	ParentShas           []string `protobuf:"bytes,1,rep,name=parent_shas,json=parentShas,proto3" json:"parent_shas,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DateCreated          uint64   `protobuf:"varint,3,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	Author               string   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	FolderSha            string   `protobuf:"bytes,1000,opt,name=folder_sha,json=folderSha,proto3" json:"folder_sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalCommit) Reset()         { *m = InternalCommit{} }
func (m *InternalCommit) String() string { return proto.CompactTextString(m) }
func (*InternalCommit) ProtoMessage()    {}
func (*InternalCommit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{0}
}

func (m *InternalCommit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalCommit.Unmarshal(m, b)
}
func (m *InternalCommit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalCommit.Marshal(b, m, deterministic)
}
func (m *InternalCommit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalCommit.Merge(m, src)
}
func (m *InternalCommit) XXX_Size() int {
	return xxx_messageInfo_InternalCommit.Size(m)
}
func (m *InternalCommit) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalCommit.DiscardUnknown(m)
}

var xxx_messageInfo_InternalCommit proto.InternalMessageInfo

func (m *InternalCommit) GetParentShas() []string {
	if m != nil {
		return m.ParentShas
	}
	return nil
}

func (m *InternalCommit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *InternalCommit) GetDateCreated() uint64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

func (m *InternalCommit) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *InternalCommit) GetFolderSha() string {
	if m != nil {
		return m.FolderSha
	}
	return ""
}

// Base commit for the versioning system
// DO NOT USE TO COMPUTE SHA
type Commit struct {
	// ID of the parent commits.
	ParentShas []string `protobuf:"bytes,1,rep,name=parent_shas,json=parentShas,proto3" json:"parent_shas,omitempty"`
	// Message associated with the commit.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Date associated with the commit.
	// It will be computed by the backend by default, but a feature flag should enable setting by the client.
	DateCreated uint64 `protobuf:"varint,3,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	// ID of the user who created the commit.
	Author               string   `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{1}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetParentShas() []string {
	if m != nil {
		return m.ParentShas
	}
	return nil
}

func (m *Commit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Commit) GetDateCreated() uint64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

func (m *Commit) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

// Data structure used to compute the SHA of a folder
type InternalFolderElement struct {
	ElementSha           string   `protobuf:"bytes,1,opt,name=element_sha,json=elementSha,proto3" json:"element_sha,omitempty"`
	ElementName          string   `protobuf:"bytes,2,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InternalFolderElement) Reset()         { *m = InternalFolderElement{} }
func (m *InternalFolderElement) String() string { return proto.CompactTextString(m) }
func (*InternalFolderElement) ProtoMessage()    {}
func (*InternalFolderElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{2}
}

func (m *InternalFolderElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalFolderElement.Unmarshal(m, b)
}
func (m *InternalFolderElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalFolderElement.Marshal(b, m, deterministic)
}
func (m *InternalFolderElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalFolderElement.Merge(m, src)
}
func (m *InternalFolderElement) XXX_Size() int {
	return xxx_messageInfo_InternalFolderElement.Size(m)
}
func (m *InternalFolderElement) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalFolderElement.DiscardUnknown(m)
}

var xxx_messageInfo_InternalFolderElement proto.InternalMessageInfo

func (m *InternalFolderElement) GetElementSha() string {
	if m != nil {
		return m.ElementSha
	}
	return ""
}

func (m *InternalFolderElement) GetElementName() string {
	if m != nil {
		return m.ElementName
	}
	return ""
}

type InternalFolder struct {
	Blobs                []*InternalFolderElement `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	SubFolders           []*InternalFolderElement `protobuf:"bytes,2,rep,name=sub_folders,json=subFolders,proto3" json:"sub_folders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *InternalFolder) Reset()         { *m = InternalFolder{} }
func (m *InternalFolder) String() string { return proto.CompactTextString(m) }
func (*InternalFolder) ProtoMessage()    {}
func (*InternalFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{3}
}

func (m *InternalFolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InternalFolder.Unmarshal(m, b)
}
func (m *InternalFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InternalFolder.Marshal(b, m, deterministic)
}
func (m *InternalFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InternalFolder.Merge(m, src)
}
func (m *InternalFolder) XXX_Size() int {
	return xxx_messageInfo_InternalFolder.Size(m)
}
func (m *InternalFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_InternalFolder.DiscardUnknown(m)
}

var xxx_messageInfo_InternalFolder proto.InternalMessageInfo

func (m *InternalFolder) GetBlobs() []*InternalFolderElement {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *InternalFolder) GetSubFolders() []*InternalFolderElement {
	if m != nil {
		return m.SubFolders
	}
	return nil
}

// DO NOT USE TO COMPUTE SHA
type FolderElement struct {
	// Name of the element inside the folder.
	ElementName string `protobuf:"bytes,2,opt,name=element_name,json=elementName,proto3" json:"element_name,omitempty"`
	// SHA of the commit which created this element.
	CreatedByCommit      string   `protobuf:"bytes,3,opt,name=created_by_commit,json=createdByCommit,proto3" json:"created_by_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FolderElement) Reset()         { *m = FolderElement{} }
func (m *FolderElement) String() string { return proto.CompactTextString(m) }
func (*FolderElement) ProtoMessage()    {}
func (*FolderElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{4}
}

func (m *FolderElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FolderElement.Unmarshal(m, b)
}
func (m *FolderElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FolderElement.Marshal(b, m, deterministic)
}
func (m *FolderElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FolderElement.Merge(m, src)
}
func (m *FolderElement) XXX_Size() int {
	return xxx_messageInfo_FolderElement.Size(m)
}
func (m *FolderElement) XXX_DiscardUnknown() {
	xxx_messageInfo_FolderElement.DiscardUnknown(m)
}

var xxx_messageInfo_FolderElement proto.InternalMessageInfo

func (m *FolderElement) GetElementName() string {
	if m != nil {
		return m.ElementName
	}
	return ""
}

func (m *FolderElement) GetCreatedByCommit() string {
	if m != nil {
		return m.CreatedByCommit
	}
	return ""
}

// DO NOT USE TO COMPUTE SHA
type Folder struct {
	// Blobs, which correspond to direct entries/files
	Blobs []*FolderElement `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	// Subfolders
	SubFolders           []*FolderElement `protobuf:"bytes,2,rep,name=sub_folders,json=subFolders,proto3" json:"sub_folders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Folder) Reset()         { *m = Folder{} }
func (m *Folder) String() string { return proto.CompactTextString(m) }
func (*Folder) ProtoMessage()    {}
func (*Folder) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{5}
}

func (m *Folder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Folder.Unmarshal(m, b)
}
func (m *Folder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Folder.Marshal(b, m, deterministic)
}
func (m *Folder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Folder.Merge(m, src)
}
func (m *Folder) XXX_Size() int {
	return xxx_messageInfo_Folder.Size(m)
}
func (m *Folder) XXX_DiscardUnknown() {
	xxx_messageInfo_Folder.DiscardUnknown(m)
}

var xxx_messageInfo_Folder proto.InternalMessageInfo

func (m *Folder) GetBlobs() []*FolderElement {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *Folder) GetSubFolders() []*FolderElement {
	if m != nil {
		return m.SubFolders
	}
	return nil
}

type Blob struct {
	// Types that are valid to be assigned to Content:
	//	*Blob_Dataset
	Content              isBlob_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{6}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

type isBlob_Content interface {
	isBlob_Content()
}

type Blob_Dataset struct {
	Dataset *DatasetBlob `protobuf:"bytes,2,opt,name=dataset,proto3,oneof"`
}

func (*Blob_Dataset) isBlob_Content() {}

func (m *Blob) GetContent() isBlob_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Blob) GetDataset() *DatasetBlob {
	if x, ok := m.GetContent().(*Blob_Dataset); ok {
		return x.Dataset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Blob) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Blob_Dataset)(nil),
	}
}

type BlobExpanded struct {
	// Expand with the path seen so far through the folders to get to this blob
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Blob                 *Blob    `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobExpanded) Reset()         { *m = BlobExpanded{} }
func (m *BlobExpanded) String() string { return proto.CompactTextString(m) }
func (*BlobExpanded) ProtoMessage()    {}
func (*BlobExpanded) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{7}
}

func (m *BlobExpanded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobExpanded.Unmarshal(m, b)
}
func (m *BlobExpanded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobExpanded.Marshal(b, m, deterministic)
}
func (m *BlobExpanded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobExpanded.Merge(m, src)
}
func (m *BlobExpanded) XXX_Size() int {
	return xxx_messageInfo_BlobExpanded.Size(m)
}
func (m *BlobExpanded) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobExpanded.DiscardUnknown(m)
}

var xxx_messageInfo_BlobExpanded proto.InternalMessageInfo

func (m *BlobExpanded) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *BlobExpanded) GetBlob() *Blob {
	if m != nil {
		return m.Blob
	}
	return nil
}

type BlobDiff struct {
	// Expand with the path seen so far through the folders to get to this blob
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*BlobDiff_Dataset
	Content              isBlobDiff_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlobDiff) Reset()         { *m = BlobDiff{} }
func (m *BlobDiff) String() string { return proto.CompactTextString(m) }
func (*BlobDiff) ProtoMessage()    {}
func (*BlobDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{8}
}

func (m *BlobDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobDiff.Unmarshal(m, b)
}
func (m *BlobDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobDiff.Marshal(b, m, deterministic)
}
func (m *BlobDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobDiff.Merge(m, src)
}
func (m *BlobDiff) XXX_Size() int {
	return xxx_messageInfo_BlobDiff.Size(m)
}
func (m *BlobDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobDiff.DiscardUnknown(m)
}

var xxx_messageInfo_BlobDiff proto.InternalMessageInfo

func (m *BlobDiff) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type isBlobDiff_Content interface {
	isBlobDiff_Content()
}

type BlobDiff_Dataset struct {
	Dataset *DatasetDiff `protobuf:"bytes,2,opt,name=dataset,proto3,oneof"`
}

func (*BlobDiff_Dataset) isBlobDiff_Content() {}

func (m *BlobDiff) GetContent() isBlobDiff_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *BlobDiff) GetDataset() *DatasetDiff {
	if x, ok := m.GetContent().(*BlobDiff_Dataset); ok {
		return x.Dataset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BlobDiff) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BlobDiff_Dataset)(nil),
	}
}

type Repository struct {
	Id                   uint64                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateCreated          uint64                                  `protobuf:"varint,3,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated          uint64                                  `protobuf:"varint,4,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	WorkspaceId          string                                  `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	WorkspaceType        modeldb.WorkspaceTypeEnum_WorkspaceType `protobuf:"varint,6,opt,name=workspace_type,json=workspaceType,proto3,enum=ai.verta.modeldb.WorkspaceTypeEnum_WorkspaceType" json:"workspace_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{9}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Repository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Repository) GetDateCreated() uint64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

func (m *Repository) GetDateUpdated() uint64 {
	if m != nil {
		return m.DateUpdated
	}
	return 0
}

func (m *Repository) GetWorkspaceId() string {
	if m != nil {
		return m.WorkspaceId
	}
	return ""
}

func (m *Repository) GetWorkspaceType() modeldb.WorkspaceTypeEnum_WorkspaceType {
	if m != nil {
		return m.WorkspaceType
	}
	return modeldb.WorkspaceTypeEnum_UNKNOWN
}

// For pagination
type Pagination struct {
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageLimit            int32    `protobuf:"varint,3,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pagination) Reset()         { *m = Pagination{} }
func (m *Pagination) String() string { return proto.CompactTextString(m) }
func (*Pagination) ProtoMessage()    {}
func (*Pagination) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{10}
}

func (m *Pagination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pagination.Unmarshal(m, b)
}
func (m *Pagination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pagination.Marshal(b, m, deterministic)
}
func (m *Pagination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pagination.Merge(m, src)
}
func (m *Pagination) XXX_Size() int {
	return xxx_messageInfo_Pagination.Size(m)
}
func (m *Pagination) XXX_DiscardUnknown() {
	xxx_messageInfo_Pagination.DiscardUnknown(m)
}

var xxx_messageInfo_Pagination proto.InternalMessageInfo

func (m *Pagination) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *Pagination) GetPageLimit() int32 {
	if m != nil {
		return m.PageLimit
	}
	return 0
}

// CRUD for repositories
type RepositoryNamedIdentification struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceName        string   `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositoryNamedIdentification) Reset()         { *m = RepositoryNamedIdentification{} }
func (m *RepositoryNamedIdentification) String() string { return proto.CompactTextString(m) }
func (*RepositoryNamedIdentification) ProtoMessage()    {}
func (*RepositoryNamedIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{11}
}

func (m *RepositoryNamedIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryNamedIdentification.Unmarshal(m, b)
}
func (m *RepositoryNamedIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryNamedIdentification.Marshal(b, m, deterministic)
}
func (m *RepositoryNamedIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryNamedIdentification.Merge(m, src)
}
func (m *RepositoryNamedIdentification) XXX_Size() int {
	return xxx_messageInfo_RepositoryNamedIdentification.Size(m)
}
func (m *RepositoryNamedIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryNamedIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryNamedIdentification proto.InternalMessageInfo

func (m *RepositoryNamedIdentification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RepositoryNamedIdentification) GetWorkspaceName() string {
	if m != nil {
		return m.WorkspaceName
	}
	return ""
}

// changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753
type RepositoryIdentification struct {
	NamedId              *RepositoryNamedIdentification `protobuf:"bytes,1,opt,name=named_id,json=namedId,proto3" json:"named_id,omitempty"`
	RepoId               uint64                         `protobuf:"varint,2,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RepositoryIdentification) Reset()         { *m = RepositoryIdentification{} }
func (m *RepositoryIdentification) String() string { return proto.CompactTextString(m) }
func (*RepositoryIdentification) ProtoMessage()    {}
func (*RepositoryIdentification) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{12}
}

func (m *RepositoryIdentification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryIdentification.Unmarshal(m, b)
}
func (m *RepositoryIdentification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryIdentification.Marshal(b, m, deterministic)
}
func (m *RepositoryIdentification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryIdentification.Merge(m, src)
}
func (m *RepositoryIdentification) XXX_Size() int {
	return xxx_messageInfo_RepositoryIdentification.Size(m)
}
func (m *RepositoryIdentification) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryIdentification.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryIdentification proto.InternalMessageInfo

func (m *RepositoryIdentification) GetNamedId() *RepositoryNamedIdentification {
	if m != nil {
		return m.NamedId
	}
	return nil
}

func (m *RepositoryIdentification) GetRepoId() uint64 {
	if m != nil {
		return m.RepoId
	}
	return 0
}

type ListRepositoriesRequest struct {
	WorkspaceName        string      `protobuf:"bytes,1,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	Pagination           *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListRepositoriesRequest) Reset()         { *m = ListRepositoriesRequest{} }
func (m *ListRepositoriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRepositoriesRequest) ProtoMessage()    {}
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{13}
}

func (m *ListRepositoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoriesRequest.Unmarshal(m, b)
}
func (m *ListRepositoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoriesRequest.Marshal(b, m, deterministic)
}
func (m *ListRepositoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoriesRequest.Merge(m, src)
}
func (m *ListRepositoriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRepositoriesRequest.Size(m)
}
func (m *ListRepositoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoriesRequest proto.InternalMessageInfo

func (m *ListRepositoriesRequest) GetWorkspaceName() string {
	if m != nil {
		return m.WorkspaceName
	}
	return ""
}

func (m *ListRepositoriesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type ListRepositoriesRequest_Response struct {
	Repository           []*Repository `protobuf:"bytes,1,rep,name=repository,proto3" json:"repository,omitempty"`
	TotalRecords         int64         `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListRepositoriesRequest_Response) Reset()         { *m = ListRepositoriesRequest_Response{} }
func (m *ListRepositoriesRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ListRepositoriesRequest_Response) ProtoMessage()    {}
func (*ListRepositoriesRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{13, 0}
}

func (m *ListRepositoriesRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRepositoriesRequest_Response.Unmarshal(m, b)
}
func (m *ListRepositoriesRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRepositoriesRequest_Response.Marshal(b, m, deterministic)
}
func (m *ListRepositoriesRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRepositoriesRequest_Response.Merge(m, src)
}
func (m *ListRepositoriesRequest_Response) XXX_Size() int {
	return xxx_messageInfo_ListRepositoriesRequest_Response.Size(m)
}
func (m *ListRepositoriesRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRepositoriesRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListRepositoriesRequest_Response proto.InternalMessageInfo

func (m *ListRepositoriesRequest_Response) GetRepository() []*Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *ListRepositoriesRequest_Response) GetTotalRecords() int64 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

type GetRepositoryRequest struct {
	Id                   *RepositoryIdentification `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetRepositoryRequest) Reset()         { *m = GetRepositoryRequest{} }
func (m *GetRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryRequest) ProtoMessage()    {}
func (*GetRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{14}
}

func (m *GetRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryRequest.Unmarshal(m, b)
}
func (m *GetRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *GetRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryRequest.Merge(m, src)
}
func (m *GetRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryRequest.Size(m)
}
func (m *GetRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryRequest proto.InternalMessageInfo

func (m *GetRepositoryRequest) GetId() *RepositoryIdentification {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetRepositoryRequest_Response struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRepositoryRequest_Response) Reset()         { *m = GetRepositoryRequest_Response{} }
func (m *GetRepositoryRequest_Response) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryRequest_Response) ProtoMessage()    {}
func (*GetRepositoryRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{14, 0}
}

func (m *GetRepositoryRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryRequest_Response.Unmarshal(m, b)
}
func (m *GetRepositoryRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryRequest_Response.Marshal(b, m, deterministic)
}
func (m *GetRepositoryRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryRequest_Response.Merge(m, src)
}
func (m *GetRepositoryRequest_Response) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryRequest_Response.Size(m)
}
func (m *GetRepositoryRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryRequest_Response proto.InternalMessageInfo

func (m *GetRepositoryRequest_Response) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type SetRepository struct {
	Id                   *RepositoryIdentification `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Repository           *Repository               `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SetRepository) Reset()         { *m = SetRepository{} }
func (m *SetRepository) String() string { return proto.CompactTextString(m) }
func (*SetRepository) ProtoMessage()    {}
func (*SetRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{15}
}

func (m *SetRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepository.Unmarshal(m, b)
}
func (m *SetRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepository.Marshal(b, m, deterministic)
}
func (m *SetRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepository.Merge(m, src)
}
func (m *SetRepository) XXX_Size() int {
	return xxx_messageInfo_SetRepository.Size(m)
}
func (m *SetRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepository.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepository proto.InternalMessageInfo

func (m *SetRepository) GetId() *RepositoryIdentification {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SetRepository) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type SetRepository_Response struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetRepository_Response) Reset()         { *m = SetRepository_Response{} }
func (m *SetRepository_Response) String() string { return proto.CompactTextString(m) }
func (*SetRepository_Response) ProtoMessage()    {}
func (*SetRepository_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{15, 0}
}

func (m *SetRepository_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepository_Response.Unmarshal(m, b)
}
func (m *SetRepository_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepository_Response.Marshal(b, m, deterministic)
}
func (m *SetRepository_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepository_Response.Merge(m, src)
}
func (m *SetRepository_Response) XXX_Size() int {
	return xxx_messageInfo_SetRepository_Response.Size(m)
}
func (m *SetRepository_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepository_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepository_Response proto.InternalMessageInfo

func (m *SetRepository_Response) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type DeleteRepositoryRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteRepositoryRequest) Reset()         { *m = DeleteRepositoryRequest{} }
func (m *DeleteRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryRequest) ProtoMessage()    {}
func (*DeleteRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{16}
}

func (m *DeleteRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryRequest.Unmarshal(m, b)
}
func (m *DeleteRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryRequest.Merge(m, src)
}
func (m *DeleteRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryRequest.Size(m)
}
func (m *DeleteRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryRequest proto.InternalMessageInfo

func (m *DeleteRepositoryRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

type DeleteRepositoryRequest_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepositoryRequest_Response) Reset()         { *m = DeleteRepositoryRequest_Response{} }
func (m *DeleteRepositoryRequest_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteRepositoryRequest_Response) ProtoMessage()    {}
func (*DeleteRepositoryRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{16, 0}
}

func (m *DeleteRepositoryRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepositoryRequest_Response.Unmarshal(m, b)
}
func (m *DeleteRepositoryRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepositoryRequest_Response.Marshal(b, m, deterministic)
}
func (m *DeleteRepositoryRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepositoryRequest_Response.Merge(m, src)
}
func (m *DeleteRepositoryRequest_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteRepositoryRequest_Response.Size(m)
}
func (m *DeleteRepositoryRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepositoryRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepositoryRequest_Response proto.InternalMessageInfo

func (m *DeleteRepositoryRequest_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

// CRUD for commits
type ListCommitsRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Pagination           *Pagination               `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CommitBase           string                    `protobuf:"bytes,3,opt,name=commit_base,json=commitBase,proto3" json:"commit_base,omitempty"`
	CommitHead           string                    `protobuf:"bytes,4,opt,name=commit_head,json=commitHead,proto3" json:"commit_head,omitempty"`
	PathPrefix           string                    `protobuf:"bytes,5,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListCommitsRequest) Reset()         { *m = ListCommitsRequest{} }
func (m *ListCommitsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommitsRequest) ProtoMessage()    {}
func (*ListCommitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{17}
}

func (m *ListCommitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitsRequest.Unmarshal(m, b)
}
func (m *ListCommitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitsRequest.Merge(m, src)
}
func (m *ListCommitsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommitsRequest.Size(m)
}
func (m *ListCommitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitsRequest proto.InternalMessageInfo

func (m *ListCommitsRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *ListCommitsRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListCommitsRequest) GetCommitBase() string {
	if m != nil {
		return m.CommitBase
	}
	return ""
}

func (m *ListCommitsRequest) GetCommitHead() string {
	if m != nil {
		return m.CommitHead
	}
	return ""
}

func (m *ListCommitsRequest) GetPathPrefix() string {
	if m != nil {
		return m.PathPrefix
	}
	return ""
}

type ListCommitsRequest_Response struct {
	Commits              []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	TotalRecords         int64     `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListCommitsRequest_Response) Reset()         { *m = ListCommitsRequest_Response{} }
func (m *ListCommitsRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ListCommitsRequest_Response) ProtoMessage()    {}
func (*ListCommitsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{17, 0}
}

func (m *ListCommitsRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitsRequest_Response.Unmarshal(m, b)
}
func (m *ListCommitsRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitsRequest_Response.Marshal(b, m, deterministic)
}
func (m *ListCommitsRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitsRequest_Response.Merge(m, src)
}
func (m *ListCommitsRequest_Response) XXX_Size() int {
	return xxx_messageInfo_ListCommitsRequest_Response.Size(m)
}
func (m *ListCommitsRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitsRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitsRequest_Response proto.InternalMessageInfo

func (m *ListCommitsRequest_Response) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func (m *ListCommitsRequest_Response) GetTotalRecords() int64 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

type GetCommitRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitSha            string                    `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetCommitRequest) Reset()         { *m = GetCommitRequest{} }
func (m *GetCommitRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitRequest) ProtoMessage()    {}
func (*GetCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{18}
}

func (m *GetCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitRequest.Unmarshal(m, b)
}
func (m *GetCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitRequest.Marshal(b, m, deterministic)
}
func (m *GetCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitRequest.Merge(m, src)
}
func (m *GetCommitRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitRequest.Size(m)
}
func (m *GetCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitRequest proto.InternalMessageInfo

func (m *GetCommitRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *GetCommitRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

type GetCommitRequest_Response struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitRequest_Response) Reset()         { *m = GetCommitRequest_Response{} }
func (m *GetCommitRequest_Response) String() string { return proto.CompactTextString(m) }
func (*GetCommitRequest_Response) ProtoMessage()    {}
func (*GetCommitRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{18, 0}
}

func (m *GetCommitRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitRequest_Response.Unmarshal(m, b)
}
func (m *GetCommitRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitRequest_Response.Marshal(b, m, deterministic)
}
func (m *GetCommitRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitRequest_Response.Merge(m, src)
}
func (m *GetCommitRequest_Response) XXX_Size() int {
	return xxx_messageInfo_GetCommitRequest_Response.Size(m)
}
func (m *GetCommitRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitRequest_Response proto.InternalMessageInfo

func (m *GetCommitRequest_Response) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type CreateCommitRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Commit               *Commit                   `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Blobs                []*BlobExpanded           `protobuf:"bytes,3,rep,name=blobs,proto3" json:"blobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CreateCommitRequest) Reset()         { *m = CreateCommitRequest{} }
func (m *CreateCommitRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest) ProtoMessage()    {}
func (*CreateCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{19}
}

func (m *CreateCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest.Unmarshal(m, b)
}
func (m *CreateCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest.Merge(m, src)
}
func (m *CreateCommitRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest.Size(m)
}
func (m *CreateCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest proto.InternalMessageInfo

func (m *CreateCommitRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *CreateCommitRequest) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *CreateCommitRequest) GetBlobs() []*BlobExpanded {
	if m != nil {
		return m.Blobs
	}
	return nil
}

type CreateCommitRequest_Response struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommitRequest_Response) Reset()         { *m = CreateCommitRequest_Response{} }
func (m *CreateCommitRequest_Response) String() string { return proto.CompactTextString(m) }
func (*CreateCommitRequest_Response) ProtoMessage()    {}
func (*CreateCommitRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{19, 0}
}

func (m *CreateCommitRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommitRequest_Response.Unmarshal(m, b)
}
func (m *CreateCommitRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommitRequest_Response.Marshal(b, m, deterministic)
}
func (m *CreateCommitRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommitRequest_Response.Merge(m, src)
}
func (m *CreateCommitRequest_Response) XXX_Size() int {
	return xxx_messageInfo_CreateCommitRequest_Response.Size(m)
}
func (m *CreateCommitRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommitRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommitRequest_Response proto.InternalMessageInfo

func (m *CreateCommitRequest_Response) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type DeleteCommitRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitSha            string                    `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteCommitRequest) Reset()         { *m = DeleteCommitRequest{} }
func (m *DeleteCommitRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCommitRequest) ProtoMessage()    {}
func (*DeleteCommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{20}
}

func (m *DeleteCommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommitRequest.Unmarshal(m, b)
}
func (m *DeleteCommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommitRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommitRequest.Merge(m, src)
}
func (m *DeleteCommitRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCommitRequest.Size(m)
}
func (m *DeleteCommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommitRequest proto.InternalMessageInfo

func (m *DeleteCommitRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *DeleteCommitRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

type DeleteCommitRequest_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommitRequest_Response) Reset()         { *m = DeleteCommitRequest_Response{} }
func (m *DeleteCommitRequest_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteCommitRequest_Response) ProtoMessage()    {}
func (*DeleteCommitRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{20, 0}
}

func (m *DeleteCommitRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommitRequest_Response.Unmarshal(m, b)
}
func (m *DeleteCommitRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommitRequest_Response.Marshal(b, m, deterministic)
}
func (m *DeleteCommitRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommitRequest_Response.Merge(m, src)
}
func (m *DeleteCommitRequest_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteCommitRequest_Response.Size(m)
}
func (m *DeleteCommitRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommitRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommitRequest_Response proto.InternalMessageInfo

// Getting blobs and folders in a commit
type ListCommitBlobsRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Pagination           *Pagination               `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CommitSha            string                    `protobuf:"bytes,3,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	PathPrefix           string                    `protobuf:"bytes,4,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListCommitBlobsRequest) Reset()         { *m = ListCommitBlobsRequest{} }
func (m *ListCommitBlobsRequest) String() string { return proto.CompactTextString(m) }
func (*ListCommitBlobsRequest) ProtoMessage()    {}
func (*ListCommitBlobsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{21}
}

func (m *ListCommitBlobsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitBlobsRequest.Unmarshal(m, b)
}
func (m *ListCommitBlobsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitBlobsRequest.Marshal(b, m, deterministic)
}
func (m *ListCommitBlobsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitBlobsRequest.Merge(m, src)
}
func (m *ListCommitBlobsRequest) XXX_Size() int {
	return xxx_messageInfo_ListCommitBlobsRequest.Size(m)
}
func (m *ListCommitBlobsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitBlobsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitBlobsRequest proto.InternalMessageInfo

func (m *ListCommitBlobsRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *ListCommitBlobsRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListCommitBlobsRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

func (m *ListCommitBlobsRequest) GetPathPrefix() string {
	if m != nil {
		return m.PathPrefix
	}
	return ""
}

type ListCommitBlobsRequest_Response struct {
	Blobs                []*BlobExpanded `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	TotalRecords         int64           `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListCommitBlobsRequest_Response) Reset()         { *m = ListCommitBlobsRequest_Response{} }
func (m *ListCommitBlobsRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ListCommitBlobsRequest_Response) ProtoMessage()    {}
func (*ListCommitBlobsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{21, 0}
}

func (m *ListCommitBlobsRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCommitBlobsRequest_Response.Unmarshal(m, b)
}
func (m *ListCommitBlobsRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCommitBlobsRequest_Response.Marshal(b, m, deterministic)
}
func (m *ListCommitBlobsRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCommitBlobsRequest_Response.Merge(m, src)
}
func (m *ListCommitBlobsRequest_Response) XXX_Size() int {
	return xxx_messageInfo_ListCommitBlobsRequest_Response.Size(m)
}
func (m *ListCommitBlobsRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCommitBlobsRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListCommitBlobsRequest_Response proto.InternalMessageInfo

func (m *ListCommitBlobsRequest_Response) GetBlobs() []*BlobExpanded {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *ListCommitBlobsRequest_Response) GetTotalRecords() int64 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

type GetCommitBlobRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitSha            string                    `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	Path                 string                    `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetCommitBlobRequest) Reset()         { *m = GetCommitBlobRequest{} }
func (m *GetCommitBlobRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitBlobRequest) ProtoMessage()    {}
func (*GetCommitBlobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{22}
}

func (m *GetCommitBlobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitBlobRequest.Unmarshal(m, b)
}
func (m *GetCommitBlobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitBlobRequest.Marshal(b, m, deterministic)
}
func (m *GetCommitBlobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitBlobRequest.Merge(m, src)
}
func (m *GetCommitBlobRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitBlobRequest.Size(m)
}
func (m *GetCommitBlobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitBlobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitBlobRequest proto.InternalMessageInfo

func (m *GetCommitBlobRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *GetCommitBlobRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

func (m *GetCommitBlobRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetCommitBlobRequest_Response struct {
	Blob                 *Blob    `protobuf:"bytes,1,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitBlobRequest_Response) Reset()         { *m = GetCommitBlobRequest_Response{} }
func (m *GetCommitBlobRequest_Response) String() string { return proto.CompactTextString(m) }
func (*GetCommitBlobRequest_Response) ProtoMessage()    {}
func (*GetCommitBlobRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{22, 0}
}

func (m *GetCommitBlobRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitBlobRequest_Response.Unmarshal(m, b)
}
func (m *GetCommitBlobRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitBlobRequest_Response.Marshal(b, m, deterministic)
}
func (m *GetCommitBlobRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitBlobRequest_Response.Merge(m, src)
}
func (m *GetCommitBlobRequest_Response) XXX_Size() int {
	return xxx_messageInfo_GetCommitBlobRequest_Response.Size(m)
}
func (m *GetCommitBlobRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitBlobRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitBlobRequest_Response proto.InternalMessageInfo

func (m *GetCommitBlobRequest_Response) GetBlob() *Blob {
	if m != nil {
		return m.Blob
	}
	return nil
}

type GetCommitFolderRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitSha            string                    `protobuf:"bytes,2,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	Path                 string                    `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetCommitFolderRequest) Reset()         { *m = GetCommitFolderRequest{} }
func (m *GetCommitFolderRequest) String() string { return proto.CompactTextString(m) }
func (*GetCommitFolderRequest) ProtoMessage()    {}
func (*GetCommitFolderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{23}
}

func (m *GetCommitFolderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitFolderRequest.Unmarshal(m, b)
}
func (m *GetCommitFolderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitFolderRequest.Marshal(b, m, deterministic)
}
func (m *GetCommitFolderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitFolderRequest.Merge(m, src)
}
func (m *GetCommitFolderRequest) XXX_Size() int {
	return xxx_messageInfo_GetCommitFolderRequest.Size(m)
}
func (m *GetCommitFolderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitFolderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitFolderRequest proto.InternalMessageInfo

func (m *GetCommitFolderRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *GetCommitFolderRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

func (m *GetCommitFolderRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetCommitFolderRequest_Response struct {
	Folder               *Folder  `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCommitFolderRequest_Response) Reset()         { *m = GetCommitFolderRequest_Response{} }
func (m *GetCommitFolderRequest_Response) String() string { return proto.CompactTextString(m) }
func (*GetCommitFolderRequest_Response) ProtoMessage()    {}
func (*GetCommitFolderRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{23, 0}
}

func (m *GetCommitFolderRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCommitFolderRequest_Response.Unmarshal(m, b)
}
func (m *GetCommitFolderRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCommitFolderRequest_Response.Marshal(b, m, deterministic)
}
func (m *GetCommitFolderRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCommitFolderRequest_Response.Merge(m, src)
}
func (m *GetCommitFolderRequest_Response) XXX_Size() int {
	return xxx_messageInfo_GetCommitFolderRequest_Response.Size(m)
}
func (m *GetCommitFolderRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCommitFolderRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetCommitFolderRequest_Response proto.InternalMessageInfo

func (m *GetCommitFolderRequest_Response) GetFolder() *Folder {
	if m != nil {
		return m.Folder
	}
	return nil
}

// Git-like operations
type ComputeRepositoryDiffRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitA              string                    `protobuf:"bytes,2,opt,name=commit_a,json=commitA,proto3" json:"commit_a,omitempty"`
	CommitB              string                    `protobuf:"bytes,3,opt,name=commit_b,json=commitB,proto3" json:"commit_b,omitempty"`
	PathPrefix           string                    `protobuf:"bytes,4,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ComputeRepositoryDiffRequest) Reset()         { *m = ComputeRepositoryDiffRequest{} }
func (m *ComputeRepositoryDiffRequest) String() string { return proto.CompactTextString(m) }
func (*ComputeRepositoryDiffRequest) ProtoMessage()    {}
func (*ComputeRepositoryDiffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{24}
}

func (m *ComputeRepositoryDiffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeRepositoryDiffRequest.Unmarshal(m, b)
}
func (m *ComputeRepositoryDiffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeRepositoryDiffRequest.Marshal(b, m, deterministic)
}
func (m *ComputeRepositoryDiffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeRepositoryDiffRequest.Merge(m, src)
}
func (m *ComputeRepositoryDiffRequest) XXX_Size() int {
	return xxx_messageInfo_ComputeRepositoryDiffRequest.Size(m)
}
func (m *ComputeRepositoryDiffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeRepositoryDiffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeRepositoryDiffRequest proto.InternalMessageInfo

func (m *ComputeRepositoryDiffRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *ComputeRepositoryDiffRequest) GetCommitA() string {
	if m != nil {
		return m.CommitA
	}
	return ""
}

func (m *ComputeRepositoryDiffRequest) GetCommitB() string {
	if m != nil {
		return m.CommitB
	}
	return ""
}

func (m *ComputeRepositoryDiffRequest) GetPathPrefix() string {
	if m != nil {
		return m.PathPrefix
	}
	return ""
}

type ComputeRepositoryDiffRequest_Response struct {
	Diffs                []*BlobDiff `protobuf:"bytes,1,rep,name=diffs,proto3" json:"diffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ComputeRepositoryDiffRequest_Response) Reset()         { *m = ComputeRepositoryDiffRequest_Response{} }
func (m *ComputeRepositoryDiffRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ComputeRepositoryDiffRequest_Response) ProtoMessage()    {}
func (*ComputeRepositoryDiffRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{24, 0}
}

func (m *ComputeRepositoryDiffRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputeRepositoryDiffRequest_Response.Unmarshal(m, b)
}
func (m *ComputeRepositoryDiffRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputeRepositoryDiffRequest_Response.Marshal(b, m, deterministic)
}
func (m *ComputeRepositoryDiffRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputeRepositoryDiffRequest_Response.Merge(m, src)
}
func (m *ComputeRepositoryDiffRequest_Response) XXX_Size() int {
	return xxx_messageInfo_ComputeRepositoryDiffRequest_Response.Size(m)
}
func (m *ComputeRepositoryDiffRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputeRepositoryDiffRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ComputeRepositoryDiffRequest_Response proto.InternalMessageInfo

func (m *ComputeRepositoryDiffRequest_Response) GetDiffs() []*BlobDiff {
	if m != nil {
		return m.Diffs
	}
	return nil
}

// CRUD for tags
// Tags, like in git, are unique
type ListTagsRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ListTagsRequest) Reset()         { *m = ListTagsRequest{} }
func (m *ListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest) ProtoMessage()    {}
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{25}
}

func (m *ListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest.Unmarshal(m, b)
}
func (m *ListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest.Merge(m, src)
}
func (m *ListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest.Size(m)
}
func (m *ListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest proto.InternalMessageInfo

func (m *ListTagsRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

type ListTagsRequest_Response struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	TotalRecords         int64    `protobuf:"varint,2,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsRequest_Response) Reset()         { *m = ListTagsRequest_Response{} }
func (m *ListTagsRequest_Response) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest_Response) ProtoMessage()    {}
func (*ListTagsRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{25, 0}
}

func (m *ListTagsRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest_Response.Unmarshal(m, b)
}
func (m *ListTagsRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest_Response.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest_Response.Merge(m, src)
}
func (m *ListTagsRequest_Response) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest_Response.Size(m)
}
func (m *ListTagsRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest_Response proto.InternalMessageInfo

func (m *ListTagsRequest_Response) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListTagsRequest_Response) GetTotalRecords() int64 {
	if m != nil {
		return m.TotalRecords
	}
	return 0
}

type GetTagRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag                  string                    `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetTagRequest) Reset()         { *m = GetTagRequest{} }
func (m *GetTagRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest) ProtoMessage()    {}
func (*GetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{26}
}

func (m *GetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest.Unmarshal(m, b)
}
func (m *GetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest.Marshal(b, m, deterministic)
}
func (m *GetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest.Merge(m, src)
}
func (m *GetTagRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest.Size(m)
}
func (m *GetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest proto.InternalMessageInfo

func (m *GetTagRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *GetTagRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type GetTagRequest_Response struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagRequest_Response) Reset()         { *m = GetTagRequest_Response{} }
func (m *GetTagRequest_Response) String() string { return proto.CompactTextString(m) }
func (*GetTagRequest_Response) ProtoMessage()    {}
func (*GetTagRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{26, 0}
}

func (m *GetTagRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagRequest_Response.Unmarshal(m, b)
}
func (m *GetTagRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagRequest_Response.Marshal(b, m, deterministic)
}
func (m *GetTagRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagRequest_Response.Merge(m, src)
}
func (m *GetTagRequest_Response) XXX_Size() int {
	return xxx_messageInfo_GetTagRequest_Response.Size(m)
}
func (m *GetTagRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagRequest_Response proto.InternalMessageInfo

func (m *GetTagRequest_Response) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type SetTagRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag                  string                    `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	CommitSha            string                    `protobuf:"bytes,3,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SetTagRequest) Reset()         { *m = SetTagRequest{} }
func (m *SetTagRequest) String() string { return proto.CompactTextString(m) }
func (*SetTagRequest) ProtoMessage()    {}
func (*SetTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{27}
}

func (m *SetTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRequest.Unmarshal(m, b)
}
func (m *SetTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRequest.Marshal(b, m, deterministic)
}
func (m *SetTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRequest.Merge(m, src)
}
func (m *SetTagRequest) XXX_Size() int {
	return xxx_messageInfo_SetTagRequest.Size(m)
}
func (m *SetTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRequest proto.InternalMessageInfo

func (m *SetTagRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *SetTagRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *SetTagRequest) GetCommitSha() string {
	if m != nil {
		return m.CommitSha
	}
	return ""
}

type SetTagRequest_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTagRequest_Response) Reset()         { *m = SetTagRequest_Response{} }
func (m *SetTagRequest_Response) String() string { return proto.CompactTextString(m) }
func (*SetTagRequest_Response) ProtoMessage()    {}
func (*SetTagRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{27, 0}
}

func (m *SetTagRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTagRequest_Response.Unmarshal(m, b)
}
func (m *SetTagRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTagRequest_Response.Marshal(b, m, deterministic)
}
func (m *SetTagRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTagRequest_Response.Merge(m, src)
}
func (m *SetTagRequest_Response) XXX_Size() int {
	return xxx_messageInfo_SetTagRequest_Response.Size(m)
}
func (m *SetTagRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTagRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetTagRequest_Response proto.InternalMessageInfo

type DeleteTagRequest struct {
	RepositoryId         *RepositoryIdentification `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag                  string                    `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{28}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetRepositoryId() *RepositoryIdentification {
	if m != nil {
		return m.RepositoryId
	}
	return nil
}

func (m *DeleteTagRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type DeleteTagRequest_Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest_Response) Reset()         { *m = DeleteTagRequest_Response{} }
func (m *DeleteTagRequest_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest_Response) ProtoMessage()    {}
func (*DeleteTagRequest_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{28, 0}
}

func (m *DeleteTagRequest_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest_Response.Unmarshal(m, b)
}
func (m *DeleteTagRequest_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest_Response.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest_Response.Merge(m, src)
}
func (m *DeleteTagRequest_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest_Response.Size(m)
}
func (m *DeleteTagRequest_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InternalCommit)(nil), "ai.verta.modeldb.versioning.InternalCommit")
	proto.RegisterType((*Commit)(nil), "ai.verta.modeldb.versioning.Commit")
	proto.RegisterType((*InternalFolderElement)(nil), "ai.verta.modeldb.versioning.InternalFolderElement")
	proto.RegisterType((*InternalFolder)(nil), "ai.verta.modeldb.versioning.InternalFolder")
	proto.RegisterType((*FolderElement)(nil), "ai.verta.modeldb.versioning.FolderElement")
	proto.RegisterType((*Folder)(nil), "ai.verta.modeldb.versioning.Folder")
	proto.RegisterType((*Blob)(nil), "ai.verta.modeldb.versioning.Blob")
	proto.RegisterType((*BlobExpanded)(nil), "ai.verta.modeldb.versioning.BlobExpanded")
	proto.RegisterType((*BlobDiff)(nil), "ai.verta.modeldb.versioning.BlobDiff")
	proto.RegisterType((*Repository)(nil), "ai.verta.modeldb.versioning.Repository")
	proto.RegisterType((*Pagination)(nil), "ai.verta.modeldb.versioning.Pagination")
	proto.RegisterType((*RepositoryNamedIdentification)(nil), "ai.verta.modeldb.versioning.RepositoryNamedIdentification")
	proto.RegisterType((*RepositoryIdentification)(nil), "ai.verta.modeldb.versioning.RepositoryIdentification")
	proto.RegisterType((*ListRepositoriesRequest)(nil), "ai.verta.modeldb.versioning.ListRepositoriesRequest")
	proto.RegisterType((*ListRepositoriesRequest_Response)(nil), "ai.verta.modeldb.versioning.ListRepositoriesRequest.Response")
	proto.RegisterType((*GetRepositoryRequest)(nil), "ai.verta.modeldb.versioning.GetRepositoryRequest")
	proto.RegisterType((*GetRepositoryRequest_Response)(nil), "ai.verta.modeldb.versioning.GetRepositoryRequest.Response")
	proto.RegisterType((*SetRepository)(nil), "ai.verta.modeldb.versioning.SetRepository")
	proto.RegisterType((*SetRepository_Response)(nil), "ai.verta.modeldb.versioning.SetRepository.Response")
	proto.RegisterType((*DeleteRepositoryRequest)(nil), "ai.verta.modeldb.versioning.DeleteRepositoryRequest")
	proto.RegisterType((*DeleteRepositoryRequest_Response)(nil), "ai.verta.modeldb.versioning.DeleteRepositoryRequest.Response")
	proto.RegisterType((*ListCommitsRequest)(nil), "ai.verta.modeldb.versioning.ListCommitsRequest")
	proto.RegisterType((*ListCommitsRequest_Response)(nil), "ai.verta.modeldb.versioning.ListCommitsRequest.Response")
	proto.RegisterType((*GetCommitRequest)(nil), "ai.verta.modeldb.versioning.GetCommitRequest")
	proto.RegisterType((*GetCommitRequest_Response)(nil), "ai.verta.modeldb.versioning.GetCommitRequest.Response")
	proto.RegisterType((*CreateCommitRequest)(nil), "ai.verta.modeldb.versioning.CreateCommitRequest")
	proto.RegisterType((*CreateCommitRequest_Response)(nil), "ai.verta.modeldb.versioning.CreateCommitRequest.Response")
	proto.RegisterType((*DeleteCommitRequest)(nil), "ai.verta.modeldb.versioning.DeleteCommitRequest")
	proto.RegisterType((*DeleteCommitRequest_Response)(nil), "ai.verta.modeldb.versioning.DeleteCommitRequest.Response")
	proto.RegisterType((*ListCommitBlobsRequest)(nil), "ai.verta.modeldb.versioning.ListCommitBlobsRequest")
	proto.RegisterType((*ListCommitBlobsRequest_Response)(nil), "ai.verta.modeldb.versioning.ListCommitBlobsRequest.Response")
	proto.RegisterType((*GetCommitBlobRequest)(nil), "ai.verta.modeldb.versioning.GetCommitBlobRequest")
	proto.RegisterType((*GetCommitBlobRequest_Response)(nil), "ai.verta.modeldb.versioning.GetCommitBlobRequest.Response")
	proto.RegisterType((*GetCommitFolderRequest)(nil), "ai.verta.modeldb.versioning.GetCommitFolderRequest")
	proto.RegisterType((*GetCommitFolderRequest_Response)(nil), "ai.verta.modeldb.versioning.GetCommitFolderRequest.Response")
	proto.RegisterType((*ComputeRepositoryDiffRequest)(nil), "ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest")
	proto.RegisterType((*ComputeRepositoryDiffRequest_Response)(nil), "ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.Response")
	proto.RegisterType((*ListTagsRequest)(nil), "ai.verta.modeldb.versioning.ListTagsRequest")
	proto.RegisterType((*ListTagsRequest_Response)(nil), "ai.verta.modeldb.versioning.ListTagsRequest.Response")
	proto.RegisterType((*GetTagRequest)(nil), "ai.verta.modeldb.versioning.GetTagRequest")
	proto.RegisterType((*GetTagRequest_Response)(nil), "ai.verta.modeldb.versioning.GetTagRequest.Response")
	proto.RegisterType((*SetTagRequest)(nil), "ai.verta.modeldb.versioning.SetTagRequest")
	proto.RegisterType((*SetTagRequest_Response)(nil), "ai.verta.modeldb.versioning.SetTagRequest.Response")
	proto.RegisterType((*DeleteTagRequest)(nil), "ai.verta.modeldb.versioning.DeleteTagRequest")
	proto.RegisterType((*DeleteTagRequest_Response)(nil), "ai.verta.modeldb.versioning.DeleteTagRequest.Response")
}

func init() {
	proto.RegisterFile("protos/public/modeldb/versioning/VersioningService.proto", fileDescriptor_8cadc242402e79bc)
}

var fileDescriptor_8cadc242402e79bc = []byte{
	// 2043 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x9a, 0x5f, 0x8c, 0x1b, 0x47,
	0x19, 0xc0, 0x99, 0x3d, 0xc7, 0x77, 0xfe, 0xee, 0x2e, 0xb9, 0x4e, 0x69, 0x62, 0xb6, 0x0d, 0xa4,
	0x5b, 0x55, 0xbd, 0x58, 0xe0, 0x25, 0x77, 0xa4, 0xa4, 0x57, 0x42, 0x93, 0xbb, 0x84, 0xcb, 0x41,
	0x88, 0xc2, 0xba, 0x49, 0x8a, 0x91, 0x6a, 0x8d, 0xbd, 0x63, 0x7b, 0x85, 0xbd, 0xeb, 0xee, 0xae,
	0x93, 0x9c, 0xa2, 0x20, 0xf1, 0x47, 0x42, 0x82, 0x88, 0x17, 0x1e, 0x50, 0x51, 0xdf, 0x10, 0xa8,
	0x0f, 0x88, 0x4a, 0x48, 0x14, 0x24, 0x78, 0x40, 0x3c, 0xf4, 0xa9, 0x12, 0x48, 0x15, 0x20, 0x21,
	0xc4, 0x0b, 0x08, 0xaa, 0x4a, 0xfc, 0x13, 0x3c, 0xf0, 0x88, 0x76, 0x66, 0xd6, 0x3b, 0xeb, 0xf3,
	0xed, 0xda, 0x3e, 0xd7, 0xbe, 0xbe, 0x79, 0x67, 0xe7, 0xfb, 0xe6, 0xfb, 0x7e, 0xdf, 0xcc, 0xb7,
	0xf3, 0x7d, 0x32, 0x9c, 0xeb, 0xb8, 0x8e, 0xef, 0x78, 0x7a, 0xa7, 0x5b, 0x6d, 0x59, 0x35, 0xbd,
	0xed, 0x98, 0xb4, 0x65, 0x56, 0xf5, 0xdb, 0xd4, 0xf5, 0x2c, 0xc7, 0xb6, 0xec, 0x86, 0x7e, 0xb3,
	0xf7, 0xb3, 0x44, 0xdd, 0xdb, 0x56, 0x8d, 0x16, 0x99, 0x08, 0x7e, 0x94, 0x58, 0xc5, 0xdb, 0xd4,
	0xf5, 0x49, 0x51, 0x08, 0x15, 0x23, 0x21, 0xf5, 0xb1, 0x86, 0xe3, 0x34, 0x5a, 0x54, 0x27, 0x1d,
	0x4b, 0x27, 0xb6, 0xed, 0xf8, 0xc4, 0xb7, 0x1c, 0xdb, 0xe3, 0xa2, 0xea, 0xe9, 0xc1, 0x8b, 0x6e,
	0x39, 0xed, 0xb6, 0x63, 0xc7, 0x56, 0x51, 0x8b, 0xa9, 0xf6, 0x5d, 0x22, 0x3e, 0xf1, 0xa8, 0xcf,
	0x27, 0x6a, 0x3f, 0x40, 0x70, 0x74, 0xc7, 0xf6, 0xa9, 0x6b, 0x93, 0x56, 0xa0, 0xcf, 0xf2, 0xf1,
	0x87, 0x60, 0xb1, 0x43, 0x5c, 0x6a, 0xfb, 0x15, 0xaf, 0x49, 0xbc, 0x3c, 0x3a, 0x35, 0xb7, 0x9a,
	0x33, 0x80, 0x0f, 0x95, 0x9a, 0xc4, 0xc3, 0x79, 0x98, 0x6f, 0x53, 0xcf, 0x23, 0x0d, 0x9a, 0x57,
	0x4e, 0xa1, 0xd5, 0x9c, 0x11, 0x3e, 0xe2, 0xc7, 0x61, 0xc9, 0x24, 0x3e, 0xad, 0xd4, 0x5c, 0x4a,
	0x7c, 0x6a, 0xe6, 0xe7, 0x4e, 0xa1, 0xd5, 0x8c, 0xb1, 0x18, 0x8c, 0x6d, 0xf1, 0x21, 0x7c, 0x1c,
	0xb2, 0xa4, 0xeb, 0x37, 0x1d, 0x37, 0x9f, 0x61, 0xb2, 0xe2, 0x09, 0x7f, 0x10, 0xa0, 0xee, 0xb4,
	0x4c, 0xea, 0x06, 0xab, 0xe6, 0xdf, 0x9e, 0x67, 0x2f, 0x73, 0x7c, 0xa8, 0xd4, 0x24, 0xda, 0x97,
	0x20, 0x3b, 0x4b, 0xfb, 0xb4, 0x2f, 0xc0, 0x23, 0x21, 0xa7, 0x4f, 0x31, 0xa3, 0x2e, 0xb7, 0x68,
	0x9b, 0xda, 0xcc, 0x1c, 0xca, 0x7f, 0x32, 0xcb, 0x11, 0x93, 0x02, 0x31, 0x54, 0x6a, 0x92, 0x60,
	0xd1, 0x70, 0x82, 0x4d, 0xda, 0xa1, 0x4d, 0xa1, 0xd0, 0x35, 0xd2, 0xa6, 0xda, 0x6b, 0x52, 0x14,
	0xb8, 0x76, 0x7c, 0x05, 0x8e, 0x54, 0x5b, 0x4e, 0x95, 0xfb, 0xb7, 0xb8, 0xb6, 0x56, 0x4c, 0xd8,
	0x3e, 0xc5, 0x81, 0x96, 0x19, 0x5c, 0x01, 0x2e, 0xc1, 0xa2, 0xd7, 0xad, 0x56, 0x38, 0x4a, 0x2f,
	0xaf, 0x8c, 0xad, 0x0f, 0xbc, 0x6e, 0x95, 0x8f, 0x78, 0xda, 0x8b, 0xb0, 0x1c, 0xc7, 0x90, 0xee,
	0x25, 0x2e, 0xc0, 0x43, 0x02, 0x7c, 0xa5, 0xba, 0x5b, 0xa9, 0xb1, 0x68, 0xb2, 0x10, 0xe4, 0x8c,
	0x63, 0xe2, 0xc5, 0xe6, 0x2e, 0x0f, 0xb2, 0xf6, 0x1d, 0x04, 0x59, 0x41, 0xe2, 0x42, 0x9c, 0x44,
	0x21, 0xd1, 0xf2, 0x81, 0x04, 0x3e, 0x33, 0x88, 0xc0, 0x28, 0x7a, 0x64, 0xcf, 0x6f, 0x41, 0x66,
	0xb3, 0xe5, 0x54, 0xf1, 0x25, 0x98, 0x37, 0xf9, 0x51, 0x62, 0xbe, 0x2e, 0xae, 0xad, 0x26, 0x2a,
	0x14, 0xc7, 0x2e, 0x10, 0xbd, 0xf2, 0x3e, 0x23, 0x14, 0xdd, 0xcc, 0xc1, 0x7c, 0xcd, 0xb1, 0x7d,
	0x6a, 0xfb, 0xda, 0xe7, 0x61, 0x29, 0x78, 0x7b, 0xf9, 0x6e, 0x87, 0xd8, 0x26, 0x35, 0x31, 0x86,
	0x4c, 0x87, 0xf8, 0x4d, 0xb1, 0xa3, 0xd8, 0x6f, 0x7c, 0x16, 0x32, 0x81, 0x4b, 0x62, 0xc5, 0xc7,
	0x13, 0x57, 0x0c, 0x94, 0x19, 0x6c, 0xba, 0xe6, 0xc0, 0x42, 0xf0, 0x74, 0xc9, 0xaa, 0xd7, 0x07,
	0xaa, 0x1d, 0xcf, 0x97, 0x40, 0xdd, 0x3e, 0xbe, 0xfc, 0x07, 0x01, 0x18, 0xb4, 0xe3, 0x78, 0x96,
	0xef, 0xb8, 0xbb, 0xf8, 0x28, 0x28, 0x96, 0xc9, 0x56, 0xcc, 0x18, 0x8a, 0xc5, 0x5c, 0x93, 0x36,
	0x09, 0xfb, 0x3d, 0xcc, 0xd9, 0x0c, 0xa7, 0x74, 0x3b, 0x26, 0x9b, 0x92, 0x89, 0xa6, 0xdc, 0xe0,
	0x43, 0xc1, 0x94, 0x3b, 0x8e, 0xfb, 0x45, 0xaf, 0x43, 0x6a, 0xb4, 0x62, 0x99, 0xf9, 0x23, 0x7c,
	0x1b, 0xf6, 0xc6, 0x76, 0x4c, 0xfc, 0x02, 0x1c, 0x8d, 0xa6, 0xf8, 0xbb, 0x1d, 0x9a, 0xcf, 0x9e,
	0x42, 0xab, 0x47, 0xd7, 0xce, 0xec, 0xf5, 0xf9, 0x56, 0x38, 0xef, 0xf9, 0xdd, 0x0e, 0xbd, 0x6c,
	0x77, 0xdb, 0xf1, 0x11, 0x63, 0xf9, 0x8e, 0xfc, 0xa8, 0x5d, 0x05, 0xb8, 0x4e, 0x1a, 0x96, 0xcd,
	0x92, 0x37, 0xcf, 0x53, 0x0d, 0x5a, 0xb1, 0xbb, 0xed, 0x2a, 0x75, 0x99, 0xaf, 0x47, 0x82, 0x3c,
	0xd5, 0xa0, 0xd7, 0xd8, 0x08, 0x3e, 0x09, 0xec, 0xa9, 0xd2, 0xb2, 0xc2, 0x83, 0x70, 0xc4, 0xc8,
	0x05, 0x23, 0x57, 0x83, 0x01, 0xad, 0x0c, 0x27, 0x23, 0x84, 0xc1, 0x01, 0x32, 0x77, 0x4c, 0x6a,
	0xfb, 0x56, 0xdd, 0xaa, 0xf1, 0x05, 0x42, 0x8a, 0x48, 0xa2, 0xf8, 0xa4, 0xec, 0x9c, 0xc4, 0x38,
	0xb2, 0x94, 0x25, 0x9c, 0x6f, 0x20, 0xc8, 0x47, 0xca, 0xfb, 0xf4, 0xde, 0x80, 0x85, 0x40, 0xd2,
	0xac, 0x88, 0x98, 0x2d, 0xae, 0x6d, 0x24, 0x6e, 0x87, 0x44, 0x2b, 0x8d, 0x79, 0x9b, 0x0f, 0xe2,
	0x13, 0x30, 0xef, 0xd2, 0x8e, 0x13, 0x68, 0x55, 0x58, 0xe0, 0xb2, 0xc1, 0xe3, 0x8e, 0xa9, 0x7d,
	0x55, 0x81, 0x13, 0x57, 0x2d, 0xcf, 0xef, 0xe9, 0xb1, 0xa8, 0x67, 0xd0, 0x97, 0xba, 0xd4, 0xf3,
	0x07, 0xf8, 0x83, 0x06, 0xf8, 0x83, 0xb7, 0x19, 0x4a, 0x41, 0x5e, 0xec, 0xe1, 0xa7, 0x12, 0x8d,
	0x8e, 0x02, 0x65, 0x48, 0xa2, 0xea, 0x5d, 0x58, 0x30, 0xa8, 0xd7, 0x71, 0x6c, 0x8f, 0x29, 0x75,
	0x7b, 0xae, 0x89, 0xec, 0xf3, 0xd4, 0x90, 0x24, 0x0c, 0x49, 0x14, 0x3f, 0x01, 0xcb, 0xbe, 0xe3,
	0x93, 0x56, 0xc5, 0xa5, 0x35, 0xc7, 0x35, 0x3d, 0x66, 0xe0, 0x9c, 0xb1, 0xc4, 0x06, 0x0d, 0x3e,
	0xa6, 0xfd, 0x18, 0xc1, 0xfb, 0xb7, 0xa9, 0x2f, 0xa9, 0x10, 0x08, 0x2e, 0xf7, 0x0e, 0xcf, 0xe2,
	0xda, 0xd9, 0x21, 0x97, 0xef, 0x8b, 0x81, 0x62, 0x99, 0x6a, 0x29, 0xc1, 0x33, 0x34, 0xa6, 0x67,
	0xda, 0x7f, 0x11, 0x2c, 0x97, 0x64, 0xa3, 0x27, 0x64, 0x6d, 0x9f, 0x85, 0xca, 0xd8, 0x16, 0xbe,
	0x3b, 0x6e, 0xbf, 0x8c, 0xe0, 0xc4, 0x25, 0xda, 0xa2, 0x3e, 0xdd, 0x1b, 0xae, 0x32, 0x2c, 0x47,
	0x33, 0x2b, 0x07, 0x65, 0xb1, 0xe4, 0x4a, 0x6f, 0x54, 0x4d, 0x72, 0xe6, 0x38, 0x64, 0x3d, 0x9f,
	0xf8, 0x5d, 0x8f, 0x2d, 0xb0, 0x60, 0x88, 0x27, 0xed, 0xc1, 0x1c, 0xe0, 0xe0, 0x34, 0xf1, 0x0f,
	0xa9, 0x37, 0x05, 0xb3, 0x26, 0x76, 0xfa, 0x82, 0x94, 0xc9, 0xaf, 0x05, 0x95, 0x2a, 0xf1, 0xa8,
	0xb8, 0x1b, 0x00, 0x1f, 0xda, 0x24, 0x1e, 0x95, 0x26, 0x34, 0x29, 0x31, 0xc5, 0x15, 0x4d, 0x4c,
	0xb8, 0x42, 0x89, 0xc9, 0x93, 0xae, 0xdf, 0xac, 0x74, 0x5c, 0x5a, 0xb7, 0xee, 0x8a, 0xf4, 0x0f,
	0xc1, 0xd0, 0x75, 0x36, 0xa2, 0xda, 0x12, 0xc2, 0xf3, 0xc1, 0x07, 0x8b, 0x51, 0x12, 0xa7, 0xfb,
	0x89, 0x44, 0xa3, 0x39, 0x51, 0x23, 0x94, 0x19, 0xee, 0x58, 0xff, 0x0e, 0xc1, 0xca, 0x36, 0x15,
	0xd1, 0x98, 0x46, 0x30, 0x4e, 0x82, 0xe0, 0xc1, 0xae, 0xa3, 0x3c, 0xfb, 0xe7, 0xf8, 0x48, 0xa9,
	0x49, 0xd4, 0x6d, 0xc9, 0xff, 0x67, 0x21, 0x2b, 0x6e, 0x61, 0x7c, 0xfd, 0xa1, 0xdc, 0x17, 0x22,
	0xda, 0xcf, 0x14, 0x78, 0x98, 0x7f, 0x98, 0xa7, 0xe7, 0x5b, 0x64, 0xb0, 0x32, 0xb2, 0xc1, 0xf8,
	0xb9, 0xf0, 0x1e, 0x39, 0xc7, 0x62, 0x7d, 0x3a, 0xf5, 0xf2, 0x14, 0xde, 0xc4, 0xc4, 0x35, 0x72,
	0x72, 0xe8, 0x5e, 0x41, 0xf0, 0x30, 0x4f, 0x1f, 0x87, 0x66, 0x5b, 0x40, 0xe4, 0x9b, 0xf6, 0x4f,
	0x05, 0x8e, 0x47, 0x19, 0x24, 0x20, 0xf1, 0xde, 0xca, 0x22, 0x71, 0x57, 0xe7, 0xfa, 0x5c, 0xed,
	0x4f, 0x11, 0x99, 0x3d, 0x29, 0xa2, 0x23, 0xc5, 0xf9, 0xb9, 0x78, 0xf1, 0x31, 0xf2, 0xa6, 0x19,
	0x2e, 0x49, 0xbc, 0xcd, 0xbf, 0xfd, 0x11, 0xf0, 0xd9, 0xef, 0x88, 0x5e, 0x9d, 0x30, 0x17, 0xd5,
	0x09, 0xea, 0x45, 0x89, 0x4c, 0x58, 0x8a, 0xa0, 0xd1, 0x4a, 0x91, 0x7f, 0x21, 0x38, 0xde, 0x73,
	0x95, 0xd7, 0x54, 0x87, 0xd4, 0xd9, 0xbe, 0xe3, 0xce, 0xab, 0xc7, 0xa1, 0x8e, 0xbb, 0x70, 0x4b,
	0x88, 0x68, 0xdf, 0x55, 0xe0, 0xb1, 0x2d, 0xa7, 0xdd, 0xe9, 0xca, 0xd7, 0x85, 0xa0, 0x78, 0x9a,
	0x86, 0xe3, 0x1f, 0x80, 0x05, 0xe1, 0x78, 0xe8, 0xb6, 0xf8, 0x7e, 0x5d, 0x94, 0x5e, 0x55, 0x85,
	0xe3, 0xe2, 0xd5, 0x66, 0xfa, 0x19, 0x89, 0xc3, 0x39, 0x62, 0x5a, 0xf5, 0x7a, 0x78, 0x46, 0x9e,
	0x4c, 0xdd, 0x0a, 0xcc, 0x77, 0x2e, 0x13, 0x5c, 0x7b, 0x8f, 0x05, 0xc9, 0xe6, 0x79, 0xd2, 0x98,
	0x46, 0x96, 0x51, 0xb7, 0x24, 0xc3, 0x31, 0x64, 0x7c, 0xd2, 0x08, 0x5b, 0x48, 0xec, 0xf7, 0x70,
	0xe7, 0xf5, 0x0d, 0x04, 0xcb, 0xdb, 0x34, 0xb0, 0x79, 0x1a, 0x21, 0x5c, 0x81, 0x39, 0x9f, 0x34,
	0x44, 0xf4, 0x82, 0x9f, 0x93, 0xfb, 0x12, 0xbd, 0xca, 0xef, 0xef, 0xb3, 0x72, 0x24, 0x25, 0x55,
	0xc7, 0xbe, 0x4a, 0x0f, 0x10, 0xac, 0xf0, 0x8f, 0xe6, 0xcc, 0xb0, 0x4b, 0xe6, 0xac, 0xfd, 0xe9,
	0x34, 0x3c, 0xb4, 0xa7, 0xd5, 0x8b, 0xff, 0x86, 0x60, 0xa5, 0xbf, 0x94, 0xc5, 0x1f, 0x4b, 0xb4,
	0x66, 0x9f, 0xca, 0x57, 0x3d, 0x3f, 0x8e, 0x54, 0xb1, 0x87, 0xeb, 0xc5, 0xaf, 0xbc, 0xf5, 0x97,
	0x6f, 0x2b, 0x2f, 0xe0, 0x8f, 0xeb, 0xb7, 0xcf, 0xc8, 0xed, 0xdf, 0x5e, 0xdd, 0xec, 0xe9, 0xf7,
	0xe2, 0x95, 0xf5, 0x7d, 0xdd, 0x95, 0x14, 0x96, 0x4f, 0xe2, 0x47, 0xfb, 0x44, 0xe5, 0xd7, 0xf8,
	0x81, 0xc2, 0x8e, 0x80, 0x54, 0xf9, 0x9d, 0x49, 0x34, 0x78, 0x50, 0x69, 0xab, 0x6e, 0x8c, 0x2c,
	0x12, 0x39, 0xf8, 0x4d, 0xc4, 0x3c, 0xfc, 0x1a, 0xc2, 0x37, 0x13, 0x5c, 0xb4, 0xcc, 0x62, 0xd8,
	0xcb, 0x28, 0x26, 0xb9, 0x1b, 0x9f, 0xc9, 0xde, 0x97, 0x0b, 0x78, 0x35, 0x81, 0x00, 0x93, 0x10,
	0x0d, 0x8d, 0xfb, 0xf8, 0x4d, 0x04, 0x2b, 0xfc, 0x36, 0x2c, 0x11, 0x49, 0x6e, 0x31, 0xc6, 0xea,
	0x66, 0x75, 0x7d, 0xf8, 0xb9, 0x11, 0x83, 0x5b, 0x0c, 0xc1, 0xe7, 0xb4, 0xad, 0x09, 0x10, 0xd8,
	0x90, 0x3b, 0x16, 0x2f, 0x2b, 0xb0, 0xc2, 0x5b, 0x6a, 0xd3, 0x74, 0xe7, 0x7b, 0x3c, 0xa4, 0xaf,
	0x20, 0xf5, 0x5d, 0x0a, 0xa9, 0xec, 0x63, 0xf9, 0x69, 0x75, 0xe8, 0xf0, 0xc6, 0xd8, 0xbc, 0xae,
	0x84, 0x89, 0x48, 0x62, 0x93, 0x7c, 0xc6, 0xf7, 0xe9, 0x15, 0xa4, 0x9c, 0xf1, 0x7d, 0xa4, 0x22,
	0x5e, 0x3f, 0xe4, 0xbc, 0xbe, 0x8f, 0x0a, 0xad, 0x04, 0x5e, 0xb1, 0x04, 0x39, 0x2c, 0xba, 0x7d,
	0x84, 0xf8, 0xc1, 0x38, 0x5b, 0x58, 0x4f, 0x24, 0x17, 0x17, 0xee, 0x9d, 0x91, 0x9f, 0x2a, 0xb0,
	0x28, 0x75, 0x26, 0xb0, 0x9e, 0x9a, 0xe1, 0xe2, 0x3d, 0x0c, 0xf5, 0xdc, 0x88, 0x02, 0x11, 0xa9,
	0x5f, 0x70, 0x52, 0x3f, 0x41, 0xd8, 0x9f, 0x26, 0x29, 0x5d, 0xb4, 0x0a, 0xca, 0xe7, 0xf1, 0xb3,
	0x63, 0x10, 0x0b, 0xc5, 0xf1, 0x9b, 0x0a, 0xe4, 0x7a, 0x97, 0x66, 0xfc, 0x91, 0xb4, 0xac, 0x19,
	0xab, 0x2a, 0xd5, 0xa7, 0x47, 0x9a, 0x1e, 0x31, 0xfb, 0x3d, 0x67, 0xf6, 0x1b, 0x84, 0xbf, 0x8c,
	0x66, 0x01, 0x4d, 0xbf, 0x17, 0x5d, 0x0d, 0xee, 0x97, 0x3f, 0x8d, 0xaf, 0x1c, 0x80, 0x60, 0x4c,
	0x17, 0xfe, 0xa5, 0x02, 0x4b, 0x72, 0xeb, 0x02, 0x7f, 0x34, 0xf9, 0xce, 0xb4, 0xb7, 0xcb, 0xa1,
	0x3e, 0x33, 0xaa, 0x44, 0xc4, 0xf5, 0x57, 0x9c, 0xeb, 0xcf, 0x91, 0x36, 0x93, 0xbd, 0xb8, 0x81,
	0x0a, 0xe5, 0x0b, 0xea, 0x41, 0xb6, 0xe3, 0x06, 0x2a, 0xe0, 0xdf, 0x2a, 0xb0, 0x24, 0xb7, 0x30,
	0x52, 0x10, 0x0e, 0xe8, 0x76, 0xa4, 0x20, 0x1c, 0x20, 0x31, 0x60, 0x6b, 0x16, 0x0e, 0xc5, 0xd6,
	0x2c, 0x4c, 0x6e, 0x6b, 0xbe, 0xa3, 0xf0, 0x72, 0x48, 0xea, 0xbd, 0xe0, 0xf5, 0x21, 0xd3, 0x9e,
	0xdc, 0xa9, 0x51, 0x3f, 0x31, 0x86, 0x50, 0x04, 0xf8, 0xcf, 0x1c, 0xf0, 0x1f, 0x11, 0xfe, 0xfa,
	0xec, 0x01, 0xeb, 0xac, 0x93, 0x52, 0xbe, 0x8e, 0xaf, 0x4d, 0x0a, 0x33, 0xd7, 0x88, 0xff, 0xc1,
	0xef, 0xb0, 0x11, 0x88, 0xf4, 0x3b, 0xec, 0x9e, 0x16, 0x4d, 0xfa, 0x1d, 0x76, 0x8f, 0x48, 0x84,
	0xf9, 0xef, 0x1c, 0xf3, 0x5f, 0x11, 0x7e, 0x70, 0x58, 0x30, 0xeb, 0x41, 0x91, 0x5f, 0xbe, 0x81,
	0x4b, 0x93, 0x65, 0xcd, 0xd4, 0xe2, 0xff, 0x29, 0x70, 0xac, 0xaf, 0xf9, 0x93, 0xb2, 0xbb, 0x07,
	0xb7, 0x8a, 0x52, 0x76, 0xf7, 0x60, 0xa1, 0x08, 0xfb, 0xbf, 0x39, 0xf6, 0x77, 0x10, 0xfe, 0xd6,
	0x21, 0xc0, 0x2e, 0xfe, 0x96, 0xc0, 0xc1, 0xdf, 0xc2, 0x37, 0x26, 0x06, 0x5e, 0x56, 0x8c, 0x7f,
	0xad, 0xc0, 0x23, 0x03, 0x9b, 0x50, 0xf8, 0x99, 0xb4, 0x86, 0xc1, 0xbe, 0x8d, 0x2b, 0x75, 0x73,
	0x6c, 0xd1, 0x28, 0x18, 0xaf, 0xf3, 0x60, 0xbc, 0x86, 0xf0, 0x4b, 0x53, 0x8d, 0x85, 0x69, 0xd5,
	0xeb, 0xe5, 0x0d, 0x7c, 0x6e, 0x1c, 0xdc, 0x81, 0x2c, 0x7e, 0x55, 0x81, 0x85, 0xb0, 0x73, 0x85,
	0x3f, 0x9c, 0x9a, 0x6e, 0xa5, 0x06, 0x97, 0x7a, 0x76, 0x94, 0xd9, 0xb3, 0x47, 0xe5, 0x93, 0x86,
	0x37, 0x2e, 0x2a, 0xd6, 0x54, 0xfb, 0x91, 0x02, 0x59, 0xde, 0x2f, 0x4b, 0x29, 0x22, 0x63, 0x4d,
	0x35, 0x75, 0x7d, 0xf8, 0xb9, 0x03, 0xae, 0x57, 0xf8, 0xce, 0xd4, 0x21, 0xe9, 0xf7, 0x7c, 0xd2,
	0xb8, 0x5f, 0xbe, 0x80, 0x3f, 0x39, 0x2e, 0x2a, 0xae, 0x01, 0xbf, 0xa1, 0x40, 0xb6, 0x34, 0x0c,
	0xb0, 0xd2, 0x08, 0xc0, 0x4a, 0x83, 0x81, 0xfd, 0x81, 0x03, 0x7b, 0x0b, 0xa9, 0xb3, 0x02, 0xb6,
	0x21, 0x35, 0x01, 0xcb, 0x57, 0xd5, 0x03, 0xc2, 0x93, 0xb5, 0x05, 0x35, 0x67, 0xae, 0xd7, 0x35,
	0x4c, 0xa9, 0x9c, 0xfa, 0xbb, 0x8b, 0x29, 0x95, 0x53, 0xff, 0xf4, 0x01, 0x5b, 0xb0, 0x30, 0xbb,
	0x2d, 0x58, 0x38, 0x20, 0xc5, 0xcd, 0xcf, 0x5e, 0x47, 0xe5, 0x9d, 0x86, 0xe5, 0x37, 0xbb, 0xd5,
	0x62, 0xcd, 0x69, 0xeb, 0x37, 0x03, 0x0e, 0x17, 0x77, 0x7a, 0x7f, 0x29, 0x15, 0x7f, 0x34, 0x6d,
	0x50, 0x5b, 0x6f, 0x38, 0x7a, 0xda, 0xdf, 0x4e, 0xab, 0x59, 0x36, 0x63, 0xfd, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x80, 0x8b, 0x7f, 0xe5, 0x41, 0x2b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VersioningServiceClient is the client API for VersioningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersioningServiceClient interface {
	// CRUD for repositories
	ListRepositories(ctx context.Context, in *ListRepositoriesRequest, opts ...grpc.CallOption) (*ListRepositoriesRequest_Response, error)
	GetRepository(ctx context.Context, in *GetRepositoryRequest, opts ...grpc.CallOption) (*GetRepositoryRequest_Response, error)
	CreateRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error)
	UpdateRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error)
	DeleteRepository(ctx context.Context, in *DeleteRepositoryRequest, opts ...grpc.CallOption) (*DeleteRepositoryRequest_Response, error)
	// CRUD for commits
	ListCommits(ctx context.Context, in *ListCommitsRequest, opts ...grpc.CallOption) (*ListCommitsRequest_Response, error)
	GetCommit(ctx context.Context, in *GetCommitRequest, opts ...grpc.CallOption) (*GetCommitRequest_Response, error)
	CreateCommit(ctx context.Context, in *CreateCommitRequest, opts ...grpc.CallOption) (*CreateCommitRequest_Response, error)
	DeleteCommit(ctx context.Context, in *DeleteCommitRequest, opts ...grpc.CallOption) (*DeleteCommitRequest_Response, error)
	// Getting blobs and folders in a commit
	ListCommitBlobs(ctx context.Context, in *ListCommitBlobsRequest, opts ...grpc.CallOption) (*ListCommitBlobsRequest_Response, error)
	GetCommitBlob(ctx context.Context, in *GetCommitBlobRequest, opts ...grpc.CallOption) (*GetCommitBlobRequest_Response, error)
	GetCommitFolder(ctx context.Context, in *GetCommitFolderRequest, opts ...grpc.CallOption) (*GetCommitFolderRequest_Response, error)
	// Git-like operations
	ComputeRepositoryDiff(ctx context.Context, in *ComputeRepositoryDiffRequest, opts ...grpc.CallOption) (*ComputeRepositoryDiffRequest_Response, error)
	// CRUD for tags
	ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsRequest_Response, error)
	GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*GetTagRequest_Response, error)
	SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*SetTagRequest_Response, error)
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*DeleteTagRequest_Response, error)
}

type versioningServiceClient struct {
	cc *grpc.ClientConn
}

func NewVersioningServiceClient(cc *grpc.ClientConn) VersioningServiceClient {
	return &versioningServiceClient{cc}
}

func (c *versioningServiceClient) ListRepositories(ctx context.Context, in *ListRepositoriesRequest, opts ...grpc.CallOption) (*ListRepositoriesRequest_Response, error) {
	out := new(ListRepositoriesRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/ListRepositories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetRepository(ctx context.Context, in *GetRepositoryRequest, opts ...grpc.CallOption) (*GetRepositoryRequest_Response, error) {
	out := new(GetRepositoryRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/GetRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) CreateRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error) {
	out := new(SetRepository_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) UpdateRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error) {
	out := new(SetRepository_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/UpdateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) DeleteRepository(ctx context.Context, in *DeleteRepositoryRequest, opts ...grpc.CallOption) (*DeleteRepositoryRequest_Response, error) {
	out := new(DeleteRepositoryRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/DeleteRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) ListCommits(ctx context.Context, in *ListCommitsRequest, opts ...grpc.CallOption) (*ListCommitsRequest_Response, error) {
	out := new(ListCommitsRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/ListCommits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetCommit(ctx context.Context, in *GetCommitRequest, opts ...grpc.CallOption) (*GetCommitRequest_Response, error) {
	out := new(GetCommitRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/GetCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) CreateCommit(ctx context.Context, in *CreateCommitRequest, opts ...grpc.CallOption) (*CreateCommitRequest_Response, error) {
	out := new(CreateCommitRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/CreateCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) DeleteCommit(ctx context.Context, in *DeleteCommitRequest, opts ...grpc.CallOption) (*DeleteCommitRequest_Response, error) {
	out := new(DeleteCommitRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/DeleteCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) ListCommitBlobs(ctx context.Context, in *ListCommitBlobsRequest, opts ...grpc.CallOption) (*ListCommitBlobsRequest_Response, error) {
	out := new(ListCommitBlobsRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/ListCommitBlobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetCommitBlob(ctx context.Context, in *GetCommitBlobRequest, opts ...grpc.CallOption) (*GetCommitBlobRequest_Response, error) {
	out := new(GetCommitBlobRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/GetCommitBlob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetCommitFolder(ctx context.Context, in *GetCommitFolderRequest, opts ...grpc.CallOption) (*GetCommitFolderRequest_Response, error) {
	out := new(GetCommitFolderRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/GetCommitFolder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) ComputeRepositoryDiff(ctx context.Context, in *ComputeRepositoryDiffRequest, opts ...grpc.CallOption) (*ComputeRepositoryDiffRequest_Response, error) {
	out := new(ComputeRepositoryDiffRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/ComputeRepositoryDiff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsRequest_Response, error) {
	out := new(ListTagsRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetTag(ctx context.Context, in *GetTagRequest, opts ...grpc.CallOption) (*GetTagRequest_Response, error) {
	out := new(GetTagRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/GetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) SetTag(ctx context.Context, in *SetTagRequest, opts ...grpc.CallOption) (*SetTagRequest_Response, error) {
	out := new(SetTagRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*DeleteTagRequest_Response, error) {
	out := new(DeleteTagRequest_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersioningServiceServer is the server API for VersioningService service.
type VersioningServiceServer interface {
	// CRUD for repositories
	ListRepositories(context.Context, *ListRepositoriesRequest) (*ListRepositoriesRequest_Response, error)
	GetRepository(context.Context, *GetRepositoryRequest) (*GetRepositoryRequest_Response, error)
	CreateRepository(context.Context, *SetRepository) (*SetRepository_Response, error)
	UpdateRepository(context.Context, *SetRepository) (*SetRepository_Response, error)
	DeleteRepository(context.Context, *DeleteRepositoryRequest) (*DeleteRepositoryRequest_Response, error)
	// CRUD for commits
	ListCommits(context.Context, *ListCommitsRequest) (*ListCommitsRequest_Response, error)
	GetCommit(context.Context, *GetCommitRequest) (*GetCommitRequest_Response, error)
	CreateCommit(context.Context, *CreateCommitRequest) (*CreateCommitRequest_Response, error)
	DeleteCommit(context.Context, *DeleteCommitRequest) (*DeleteCommitRequest_Response, error)
	// Getting blobs and folders in a commit
	ListCommitBlobs(context.Context, *ListCommitBlobsRequest) (*ListCommitBlobsRequest_Response, error)
	GetCommitBlob(context.Context, *GetCommitBlobRequest) (*GetCommitBlobRequest_Response, error)
	GetCommitFolder(context.Context, *GetCommitFolderRequest) (*GetCommitFolderRequest_Response, error)
	// Git-like operations
	ComputeRepositoryDiff(context.Context, *ComputeRepositoryDiffRequest) (*ComputeRepositoryDiffRequest_Response, error)
	// CRUD for tags
	ListTags(context.Context, *ListTagsRequest) (*ListTagsRequest_Response, error)
	GetTag(context.Context, *GetTagRequest) (*GetTagRequest_Response, error)
	SetTag(context.Context, *SetTagRequest) (*SetTagRequest_Response, error)
	DeleteTag(context.Context, *DeleteTagRequest) (*DeleteTagRequest_Response, error)
}

// UnimplementedVersioningServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersioningServiceServer struct {
}

func (*UnimplementedVersioningServiceServer) ListRepositories(ctx context.Context, req *ListRepositoriesRequest) (*ListRepositoriesRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRepositories not implemented")
}
func (*UnimplementedVersioningServiceServer) GetRepository(ctx context.Context, req *GetRepositoryRequest) (*GetRepositoryRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) CreateRepository(ctx context.Context, req *SetRepository) (*SetRepository_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) UpdateRepository(ctx context.Context, req *SetRepository) (*SetRepository_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) DeleteRepository(ctx context.Context, req *DeleteRepositoryRequest) (*DeleteRepositoryRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) ListCommits(ctx context.Context, req *ListCommitsRequest) (*ListCommitsRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCommits not implemented")
}
func (*UnimplementedVersioningServiceServer) GetCommit(ctx context.Context, req *GetCommitRequest) (*GetCommitRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommit not implemented")
}
func (*UnimplementedVersioningServiceServer) CreateCommit(ctx context.Context, req *CreateCommitRequest) (*CreateCommitRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCommit not implemented")
}
func (*UnimplementedVersioningServiceServer) DeleteCommit(ctx context.Context, req *DeleteCommitRequest) (*DeleteCommitRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCommit not implemented")
}
func (*UnimplementedVersioningServiceServer) ListCommitBlobs(ctx context.Context, req *ListCommitBlobsRequest) (*ListCommitBlobsRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCommitBlobs not implemented")
}
func (*UnimplementedVersioningServiceServer) GetCommitBlob(ctx context.Context, req *GetCommitBlobRequest) (*GetCommitBlobRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommitBlob not implemented")
}
func (*UnimplementedVersioningServiceServer) GetCommitFolder(ctx context.Context, req *GetCommitFolderRequest) (*GetCommitFolderRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommitFolder not implemented")
}
func (*UnimplementedVersioningServiceServer) ComputeRepositoryDiff(ctx context.Context, req *ComputeRepositoryDiffRequest) (*ComputeRepositoryDiffRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ComputeRepositoryDiff not implemented")
}
func (*UnimplementedVersioningServiceServer) ListTags(ctx context.Context, req *ListTagsRequest) (*ListTagsRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedVersioningServiceServer) GetTag(ctx context.Context, req *GetTagRequest) (*GetTagRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}
func (*UnimplementedVersioningServiceServer) SetTag(ctx context.Context, req *SetTagRequest) (*SetTagRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedVersioningServiceServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*DeleteTagRequest_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}

func RegisterVersioningServiceServer(s *grpc.Server, srv VersioningServiceServer) {
	s.RegisterService(&_VersioningService_serviceDesc, srv)
}

func _VersioningService_ListRepositories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRepositoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).ListRepositories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/ListRepositories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).ListRepositories(ctx, req.(*ListRepositoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetRepository(ctx, req.(*GetRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).CreateRepository(ctx, req.(*SetRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_UpdateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).UpdateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/UpdateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).UpdateRepository(ctx, req.(*SetRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_DeleteRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).DeleteRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/DeleteRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).DeleteRepository(ctx, req.(*DeleteRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_ListCommits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).ListCommits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/ListCommits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).ListCommits(ctx, req.(*ListCommitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetCommit(ctx, req.(*GetCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_CreateCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).CreateCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/CreateCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).CreateCommit(ctx, req.(*CreateCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_DeleteCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).DeleteCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/DeleteCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).DeleteCommit(ctx, req.(*DeleteCommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_ListCommitBlobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCommitBlobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).ListCommitBlobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/ListCommitBlobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).ListCommitBlobs(ctx, req.(*ListCommitBlobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetCommitBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommitBlobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetCommitBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetCommitBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetCommitBlob(ctx, req.(*GetCommitBlobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetCommitFolder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCommitFolderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetCommitFolder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetCommitFolder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetCommitFolder(ctx, req.(*GetCommitFolderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_ComputeRepositoryDiff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ComputeRepositoryDiffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).ComputeRepositoryDiff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/ComputeRepositoryDiff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).ComputeRepositoryDiff(ctx, req.(*ComputeRepositoryDiffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).ListTags(ctx, req.(*ListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetTag(ctx, req.(*GetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).SetTag(ctx, req.(*SetTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersioningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.modeldb.versioning.VersioningService",
	HandlerType: (*VersioningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRepositories",
			Handler:    _VersioningService_ListRepositories_Handler,
		},
		{
			MethodName: "GetRepository",
			Handler:    _VersioningService_GetRepository_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _VersioningService_CreateRepository_Handler,
		},
		{
			MethodName: "UpdateRepository",
			Handler:    _VersioningService_UpdateRepository_Handler,
		},
		{
			MethodName: "DeleteRepository",
			Handler:    _VersioningService_DeleteRepository_Handler,
		},
		{
			MethodName: "ListCommits",
			Handler:    _VersioningService_ListCommits_Handler,
		},
		{
			MethodName: "GetCommit",
			Handler:    _VersioningService_GetCommit_Handler,
		},
		{
			MethodName: "CreateCommit",
			Handler:    _VersioningService_CreateCommit_Handler,
		},
		{
			MethodName: "DeleteCommit",
			Handler:    _VersioningService_DeleteCommit_Handler,
		},
		{
			MethodName: "ListCommitBlobs",
			Handler:    _VersioningService_ListCommitBlobs_Handler,
		},
		{
			MethodName: "GetCommitBlob",
			Handler:    _VersioningService_GetCommitBlob_Handler,
		},
		{
			MethodName: "GetCommitFolder",
			Handler:    _VersioningService_GetCommitFolder_Handler,
		},
		{
			MethodName: "ComputeRepositoryDiff",
			Handler:    _VersioningService_ComputeRepositoryDiff_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _VersioningService_ListTags_Handler,
		},
		{
			MethodName: "GetTag",
			Handler:    _VersioningService_GetTag_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _VersioningService_SetTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _VersioningService_DeleteTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/public/modeldb/versioning/VersioningService.proto",
}
